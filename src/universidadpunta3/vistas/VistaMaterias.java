/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadpunta3.vistas;

import java.sql.*;
import java.time.LocalDate;
import java.time.ZoneId;
import static java.util.Objects.isNull;
import javax.swing.JOptionPane;
import universidadpunta3.modelos.*;


/**
 *
 * @author Emiliano
 */
public class VistaMaterias extends javax.swing.JInternalFrame {
    private MateriaData materiaData;
    private Conexion conexion=null;
    /**
     * Creates new form VistaAlumnos
     */
    public VistaMaterias() {
        initComponents();
         try {
        conexion = new Conexion();
        Connection con = conexion.getConexion();
        materiaData = new MateriaData(conexion);
    } catch (ClassNotFoundException ex) {
        JOptionPane.showMessageDialog(this, "Error con los drivers de conexion");
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Problema de conexion con la base de datos");
    }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTID = new javax.swing.JTextField();
        jTNombre = new javax.swing.JTextField();
        jTAnio = new javax.swing.JTextField();
        jCEstado = new javax.swing.JCheckBox();
        jBGuardar = new javax.swing.JButton();
        jBBorrar = new javax.swing.JButton();
        jBActualizar = new javax.swing.JButton();
        jBLimpiar = new javax.swing.JButton();
        jBBuscar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("MATERIAS");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("ID:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Nombre de la materia:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("AÃ±o de la materia:");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Estado:");

        jTID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTIDKeyTyped(evt);
            }
        });

        jTNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTNombreKeyTyped(evt);
            }
        });

        jTAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTAnioKeyTyped(evt);
            }
        });

        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jBBorrar.setText("Borrar");
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        jBActualizar.setText("Actualizar");
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });

        jBLimpiar.setText("Limpiar");
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addComponent(jLabel5)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(30, 30, 30)
                                    .addComponent(jLabel7)))
                            .addGap(35, 35, 35)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTID)
                                .addComponent(jCEstado))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBBuscar))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(188, 188, 188)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(73, 73, 73)
                            .addComponent(jBGuardar)
                            .addGap(18, 18, 18)
                            .addComponent(jBBorrar)
                            .addGap(18, 18, 18)
                            .addComponent(jBActualizar)
                            .addGap(18, 18, 18)
                            .addComponent(jBLimpiar))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(201, 201, 201)
                            .addComponent(jLabel1))))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(29, 29, 29)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBGuardar)
                    .addComponent(jBBorrar)
                    .addComponent(jBActualizar)
                    .addComponent(jBLimpiar))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        // TODO add your handling code here:
        if (jTAnio.getText().isEmpty()||jTNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,"no puede haber campos vacios");
            return;
        }
        String nombre=jTNombre.getText();
        int anio=Integer.parseInt(jTAnio.getText());
        Boolean estado = jCEstado.isEnabled();
        Materia materia = new Materia(nombre, anio, estado);
        materiaData.guardarMateria(materia);
        jTID.setText(String.valueOf(materia.getId_materia()));
        jTID.setEnabled(false);
        jTNombre.setEnabled(false);
        jTAnio.setEnabled(false);
        jCEstado.setEnabled(false);
        jBBuscar.setEnabled(false);
        jBActualizar.setEnabled(false);
        jBBorrar.setEnabled(false);
        jBGuardar.setEnabled(false);
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jTID.getText());
        Materia materia = materiaData.buscarMateria(id);
        if(materia!=null){
        
        materiaData.borrarMateriaLogica(id);

        jTNombre.setText(materia.getMateriaMateria());
        jTAnio.setText(String.valueOf(materia.getAnio()));

        jCEstado.setEnabled(false);
        jTID.setEnabled(false);
        jTNombre.setEnabled(false);
        jTAnio.setEnabled(false);
        jBBuscar.setEnabled(false);
        jBActualizar.setEnabled(false);
        jBBorrar.setEnabled(false);
        jBGuardar.setEnabled(false);}
        else{JOptionPane.showMessageDialog(this, "la materia que intenta borrar, no se encuentra en la base de datos");}
    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed
        // TODO add your handling code here:
        if (jTID.getText().isEmpty()||jTAnio.getText().isEmpty()||jTNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,"no puede haber campos vacios");
            return;
        }
        int id = Integer.parseInt(jTID.getText());
        Materia aux = materiaData.buscarMateria(id);
        if(aux!=null){
            String nombre=jTNombre.getText();
            int anio = Integer.parseInt(jTAnio.getText());
            Boolean estado = jCEstado.isEnabled();
            Materia materia = new Materia(id,nombre,anio,estado);
            materiaData.actualizarMateria(materia);
            jTID.setEnabled(false);
            jTNombre.setEnabled(false);
            jTAnio.setEnabled(false);
            jCEstado.setEnabled(false);
            jBBuscar.setEnabled(false);
            jBActualizar.setEnabled(false);
            jBBorrar.setEnabled(false);
            jBGuardar.setEnabled(false);
        }else{JOptionPane.showMessageDialog(this,"la materia que quiere actualizar no esta en la base de datos");}
    }//GEN-LAST:event_jBActualizarActionPerformed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        // TODO add your handling code here:
        jTID.setText("");
        jTNombre.setText("");
        jTAnio.setText("");
        jCEstado.setSelected(false);
            
        jTID.setEnabled(true);
        jTNombre.setEnabled(true);
        jTAnio.setEnabled(true);
        jCEstado.setEnabled(true);
        jBBuscar.setEnabled(true);
        jBActualizar.setEnabled(true);
        jBBorrar.setEnabled(true);
        jBGuardar.setEnabled(true);
        
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jTID.getText());
        Materia materia = materiaData.buscarMateria(id);
        if(materia!=null){
        jTNombre.setText(materia.getMateriaMateria());
        jTAnio.setText(String.valueOf(materia.getAnio()));
        jCEstado.setSelected(materia.isEstado());
        jBBuscar.setEnabled(false);
        jBGuardar.setEnabled(false);
        }else{JOptionPane.showMessageDialog(this, "El id que ingreso no esta registrado en la base de datos");}
        
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jTIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTIDKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if(Character.isLetter(validar)){
        getToolkit().beep();
        evt.consume();
        JOptionPane.showMessageDialog(this,"Solo puede ingresar numeros");
        }
    }//GEN-LAST:event_jTIDKeyTyped

    private void jTNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNombreKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if(Character.isDigit(validar)){
        getToolkit().beep();
        evt.consume();
        JOptionPane.showMessageDialog(this,"solo puede ingresar letras");
        }
    }//GEN-LAST:event_jTNombreKeyTyped

    private void jTAnioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAnioKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if(Character.isLetter(validar)){
        getToolkit().beep();
        evt.consume();
        JOptionPane.showMessageDialog(this,"Solo puede ingresar numeros");
        }
    }//GEN-LAST:event_jTAnioKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JCheckBox jCEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTAnio;
    private javax.swing.JTextField jTID;
    private javax.swing.JTextField jTNombre;
    // End of variables declaration//GEN-END:variables
}
