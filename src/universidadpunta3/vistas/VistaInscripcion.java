/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadpunta3.vistas;

import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadpunta3.modelos.Alumno;
import universidadpunta3.modelos.AlumnoData;
import universidadpunta3.modelos.Conexion;
import universidadpunta3.modelos.Cursada;
import universidadpunta3.modelos.CursadaData;
import universidadpunta3.modelos.Materia;
import universidadpunta3.modelos.MateriaData;

/**
 *
 * @author Asus
 */
public class VistaInscripcion extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo;
    private ArrayList<Alumno> listaAlumnos;
    private ArrayList<Materia> listaMaterias;
    private ArrayList<Cursada> listaCursada, listaNoCursada;
    private CursadaData cd;
    private AlumnoData ad;
    private MateriaData md;
    private Conexion conexion;
    private int registro;
    private int idMateria;
    
    /**
     * Creates new form VistaInscripcion
     */
    public VistaInscripcion() {
        initComponents();
        try {
            conexion = new Conexion("jdbc:mysql://localhost/universidadgrupo3", "root", "");
            modelo = new DefaultTableModel(){public boolean isCellEditable(int row,int col){
            return(col!=0&&col!=1&&col!=2);
            }};
            cd = new CursadaData(conexion);
            listaCursada = (ArrayList)cd.obtenerCursadas();
            ad = new AlumnoData(conexion);
            listaAlumnos = (ArrayList)ad.obtenerAlumnos();
            md = new MateriaData(conexion);
            borrarFilas();
            armarTabla();
            cargarAlumnos();
            inscribir.setEnabled(false);
            anularInscripcion.setEnabled(false);
            bgOpciones.clearSelection();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaInscripcion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgOpciones = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCAlumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tMaterias = new javax.swing.JTable();
        anularInscripcion = new javax.swing.JToggleButton();
        salir = new javax.swing.JToggleButton();
        inscribir = new javax.swing.JToggleButton();
        jrInscriptas = new javax.swing.JRadioButton();
        jrNoinscriptas = new javax.swing.JRadioButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("FORMULARIO DE INSCRIPCION");

        jLabel2.setText("Alumno:");

        jCAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCAlumnosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("LISTADO DE MATERIAS");

        tMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tMaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tMateriasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tMaterias);

        anularInscripcion.setText("Anular Inscripcion");
        anularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anularInscripcionActionPerformed(evt);
            }
        });

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        inscribir.setText("Inscribir");
        inscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inscribirActionPerformed(evt);
            }
        });

        bgOpciones.add(jrInscriptas);
        jrInscriptas.setText("Inscriptas");
        jrInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrInscriptasActionPerformed(evt);
            }
        });
        jrInscriptas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jrInscriptasKeyReleased(evt);
            }
        });

        bgOpciones.add(jrNoinscriptas);
        jrNoinscriptas.setText("No Inscriptas");
        jrNoinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrNoinscriptasActionPerformed(evt);
            }
        });
        jrNoinscriptas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jrNoinscriptasKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jrInscriptas)
                                .addGap(54, 54, 54)
                                .addComponent(jrNoinscriptas)
                                .addGap(10, 10, 10))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(26, 26, 26)
                                    .addComponent(jCAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(27, 27, 27))
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(jLabel3))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(73, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(inscribir)
                .addGap(31, 31, 31)
                .addComponent(anularInscripcion)
                .addGap(30, 30, 30)
                .addComponent(salir)
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jCAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrInscriptas)
                    .addComponent(jrNoinscriptas))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anularInscripcion)
                    .addComponent(salir)
                    .addComponent(inscribir))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCAlumnosActionPerformed
        // TODO add your handling code here:
        cargarAlumnos();
    }//GEN-LAST:event_jCAlumnosActionPerformed

    private void inscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inscribirActionPerformed
        // TODO add your handling code here:
        Alumno alum1 = (Alumno)jCAlumnos.getSelectedItem();
        Materia mat1 = md.buscarMateria(idMateria);
        Cursada cur1 = new Cursada(alum1, mat1, 0, true);
        cd.guardarCursada(cur1);
        cargarMateriasNoInscriptas();
    }//GEN-LAST:event_inscribirActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_salirActionPerformed

    private void jrNoinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrNoinscriptasActionPerformed
        // TODO add your handling code here:
        cargarMateriasNoInscriptas();
        inscribir.setEnabled(true);
        anularInscripcion.setEnabled(false);
    }//GEN-LAST:event_jrNoinscriptasActionPerformed

    private void jrInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrInscriptasActionPerformed
        // TODO add your handling code here:
        cargarMateriasInscriptas();
        anularInscripcion.setEnabled(true);
        inscribir.setEnabled(false);
    }//GEN-LAST:event_jrInscriptasActionPerformed

    private void anularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anularInscripcionActionPerformed
        // TODO add your handling code here:
        Alumno alum1 = (Alumno)jCAlumnos.getSelectedItem();
        cd.borrarCursadaDeunAlumnoFisico(alum1.getId_alumno(), idMateria);
        cargarMateriasInscriptas();
    }//GEN-LAST:event_anularInscripcionActionPerformed

    private void tMateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tMateriasMouseClicked
        // TODO add your handling code here:
        registro = tMaterias.getSelectedRow();
        idMateria = parseInt(tMaterias.getValueAt(registro, 0).toString());
    }//GEN-LAST:event_tMateriasMouseClicked

    private void jrInscriptasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrInscriptasKeyReleased
        // TODO add your handling code here:
        //habilitarBotonNoinscribir();
    }//GEN-LAST:event_jrInscriptasKeyReleased

    private void jrNoinscriptasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrNoinscriptasKeyReleased
        // TODO add your handling code here:
        //habilitarBotonInscripcion();
    }//GEN-LAST:event_jrNoinscriptasKeyReleased
    
    public void cargarAlumnos(){
        for (Alumno a: listaAlumnos){
            jCAlumnos.addItem(a);
        }
    }
    
    public void armarTabla(){
        ArrayList<Object> cabecera = new ArrayList<Object>();
        cabecera.add("ID");
        cabecera.add("Nombre");
        cabecera.add("Año");
        
        for (Object in : cabecera){
            modelo.addColumn(in);
        }
        tMaterias.setModel(modelo);
    }
    
    public void borrarFilas(){
        int f = modelo.getRowCount() - 1;
        for (int i = f; i>=0; i--){
            modelo.removeRow(i);
        }
    }
    
    public void cargarMateriasInscriptas(){
        borrarFilas();
        Alumno a2 = (Alumno)jCAlumnos.getSelectedItem();
        ArrayList<Materia> inscriptas = (ArrayList)cd.obtenerMateriasCursadasXAlumno(a2.getId_alumno());
        for (Materia ma1 : inscriptas){
           // if(ma.isEstado() == true){
            modelo.addRow(new Object[]{ma1.getId_materia(), ma1.getMateriaMateria(), ma1.getAnio()});
           // }
        }
    }
    
    public void cargarMateriasNoInscriptas(){
        borrarFilas();
        Alumno a1 = (Alumno)jCAlumnos.getSelectedItem();
        ArrayList<Materia> noInscriptas = (ArrayList)cd.obtenerMateriasNOCursadas(a1.getId_alumno());
        for (Materia ma : noInscriptas){
           // if(ma.isEstado() == false){
            modelo.addRow(new Object[]{ma.getId_materia(), ma.getMateriaMateria(), ma.getAnio()});
           // }
        }
    }
    /*
    public void habilitarBotonInscripcion(){
        if(jrInscriptas.isSelected() == true){
            inscribir.setEnabled(true);
        } else {
            inscribir.setEnabled(false);
        }
    }
    
    public void habilitarBotonNoinscribir(){
        if(jrNoinscriptas.isSelected() == true){
            anularInscripcion.setEnabled(true);
        } else {
            anularInscripcion.setEnabled(false);
        }
    } */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton anularInscripcion;
    private javax.swing.ButtonGroup bgOpciones;
    private javax.swing.JToggleButton inscribir;
    private javax.swing.JComboBox<Alumno> jCAlumnos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrInscriptas;
    private javax.swing.JRadioButton jrNoinscriptas;
    private javax.swing.JToggleButton salir;
    private javax.swing.JTable tMaterias;
    // End of variables declaration//GEN-END:variables
}
